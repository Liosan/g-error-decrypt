 'hydra::sccEditor::backend::SccEditorBackend::createSccMetadataForScc(cool::SharedPtr<hydra::usl::SccIdentifier, CONST>, const hydra::usl::SccState&, cool::Option<cool::TypedInteger<unsigned int, hydra::usl::DeletionStamp::TypedIntegerHelperForEpoch, true> >, hydra::usl::SccCountersEpoch, const hydra::usl::WriteTimestamp&, const hydra::usl::WriteTimestamp&, const __gnu_debug_def::list<cool::SharedPtr<hydra::usl::WriteRecordMetadata, CONST>, std::allocator<cool::SharedPtr<hydra::usl::WriteRecordMetadata, CONST> > >&)'
 
 src/utils/sccEditor/backend/sccEditorBackend.cpp:552: note: candidates are: static hydra::sccEditor::CallResult<hydra::usl::SccMetadata> hydra::sccEditor::backend::SccEditorBackend::createSccMetadataForScc(cool::SharedPtr<hydra::usl::SccIdentifier, CONST>, hydra::usl::SccState, cool::TypedInteger<unsigned int, hydra::usl::DeletionStamp::TypedIntegerHelperForEpoch, true>, hydra::usl::SccCountersEpoch, hydra::usl::WriteTimestamp, hydra::usl::WriteTimestamp, const __gnu_debug_def::list<cool::SharedPtr<hydra::usl::WriteRecordMetadata, CONST>, std::allocator<cool::SharedPtr<hydra::usl::WriteRecordMetadata, CONST> > >&) 